#
# A virtual host using mix of IP-, name-, and port-based configuration
#

#server {
#    listen       8000;
#    listen       somename:8080;
#    server_name  somename  alias  another.alias;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}

upstream app_server {
  #server unix:/var/run/gunicorn/gunicorn.sock fail_timeout=0;
  # For a TCP configuration:
  server 172.18.102.1:8000 fail_timeout=0;
}

server {
  listen 80;
  client_max_body_size 4G;
  server_name 172.18.102.1

  keepalive_timeout 5;

  # path for static files
  root /opt/local/projects/openflowlogger/webapp/oflogviewer/static;

  location /favicon.ico {
      return 204;
      access_log off;
  }

  location /application.js {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://localhost:8080/application.js;

  }

  location /static/scnv/index3.html {
      auth_basic "Administrator only";
      auth_basic_user_file /home/isp/hogepasswd;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      if (!-f $request_filename) {
          proxy_pass http://app_server;
          break;
      }
  }

  location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      if (!-f $request_filename) {
          proxy_pass http://app_server;
          break;
      }
  }

  error_page 500 502 503 504 /500.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}

